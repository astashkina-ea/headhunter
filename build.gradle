plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'ru.leroymerlin'
version = '1.0-SNAPSHOT'

def allureVersion = '2.22.1',
    junitVersion = '5.9.3',
    selenideVersion = '6.15.0',
    slf4jVersion = '2.0.7'

repositories {
    mavenCentral()
}

allure {
    report {
        version.set("${allureVersion}")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("${allureVersion}")
            }
        }
    }

    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'org.aeonbits.owner:owner:1.0.4'
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}

task smoke_test(type: Test) {
    useJUnitPlatform{
        includeTags("smoke")
    }
}